package pkgfinal;
import java.awt.*;                      // paint graphics and images
import java.awt.image.BufferedImage;    // buffer of image data
import javax.swing.*;                   // GUI, Jframe, JPanel
import java.util.Scanner;
import java.util.Random;

public class Final extends JFrame 
{
    private final int maxIter = 360;
    //private final double zoom = 1;
    private double cY, cX;
    private BufferedImage image;
    
    public Final()
    {
        //super("Julia Set");
        setBounds(0, 0, 800, 600);
        setResizable(false);
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        setLocationRelativeTo(null);
        //setTitleColor(Color.yellow);
        //setFont(new Font("Arial", Font.BOLD, 36));
        
        Scanner in = new Scanner(System.in);
    
        int w = getWidth();
        int h = getHeight();
        double zoom = 1;
        int coords = -2;
        
        double[] xcoord = {0,  0, -.123, -1.756, -1.1409, .36, -.658, -.7,-.75, -1.25, -.125,  0, -.765, .3,   .28, -.391, -2, -1, .25, -.7};
        double[] ycoord = {0, .1, -.745,    0,    .2409, -.1, -.45,  .27015,  0,    0,   .64952, 1, .12,  -.01, .008, -.587,  0, -1,  0, .28};
        String[] name = {"Circle", "Rough Circle", "Douady's Rabbit", "Airplane", "Rabbit's Shadow", "Dragon", "Super Attractor", "Double Whirlpool", "San Marco", "San Marco's Shadow", "Balloon rabbit", "Dendrite", "Cantor", "Fish", "Paisley", "Siegel Disk", "Flying Saucers", "Dust", "Cauliflower", "Black Holes"};
        
        
        System.out.println("input an index from -1 to 19, -1 is the Mandelbrot set");
        
        coords = in.nextInt();
        
        System.out.println("enter zoom factor, 1 is base zoom, higher numbers zoom in");
        
        zoom = in.nextDouble();
        
        
        if (coords == -1)       // Mandelbrot
        {
            setTitle("Mandelbrot");
        }
        else
        {
            setTitle(name[coords]);
        }

        // class Buffredimage, TYPE_INT_RGB in 8-bit packed into integer pixels
        image = new BufferedImage(w, h, BufferedImage.TYPE_INT_RGB);
        
        
        if (coords != -1)       // julia
        {
            cX = xcoord[coords];
            cY = ycoord[coords];
        }
        
        double moveX = 0, moveY = 0;  // moveX = 1 shifts right 1.0
        double zx, zy;                // moveY = 1 shifts up 1.0
 
        for (int x = 0; x < w; x++)
        {
            for (int y = 0; y < h; y++)
            {
                // x is from -1.5 to 1.5 and y is from -1 to 1
                zx = 1.5 * (x - w / 2) / (0.5 * zoom * w) - moveX;
                zy = (y - h / 2) / (0.5 * zoom * h) + moveY;
                if (coords == -1)       // Mandelbrot
                    {
                        cX = zx;
                        cY = zy;
                    }   
                int i = maxIter;
                while (zx * zx + zy * zy < 4 && i > 0)
                {
                    double tmp = zx * zx - zy * zy + cX;
                    zy = 2.0 * zx * zy + cY;
                    zx = tmp;
                    i--;
                }
                int c = new Color(i % 64 * 4, i % 8 * 32, i % 8 * 32).getRGB();
                //image.setRGB(x, y, i | (i << 8));
                image.setRGB(x, y, c);
            }
        }
        
        
    }
 
    @Override
    public void paint(Graphics g)      // painting code
    {
        g.drawImage(image, 0, 0, this);
        
    }
    
    public static void main(String[] args) 
    {
        new Final().setVisible(true);
    }
}
